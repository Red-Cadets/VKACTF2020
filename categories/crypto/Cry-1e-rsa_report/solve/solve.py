from Crypto.Util.number import *

s1 = b"qwertyuiop"  # Первое сообщение, которое зашифровано в качестве подписи 
n1 = bytes_to_long(s1)
n1_a = 33867743973752584827316118246699387752608924064140018608821523281653511467066080929013934188297585254599488903425418660395076008215242992526072085286401461631217509141652223452982230667051091202429507502321428940755716437433051212457585130174052587990388346073360364471207243597012908464222929495558176086982459943182475290627489282863715246292805788783745016685451462546940327910520959014532939092205062348242168669589552851190070692367373500717217482059964708887968333649591510172073116536976724954986454944565561902221182828174430050762238635897370275432724367362572638505386558912117217411606820214869533873298200491713118579283201712027996315273364047265777752496417756409475794294691142772739294176522027891239597240202259559800876579636205491119578049615846238353766970873607789779932172591935721312435693933849529750530756344403406740571404412316297247867222285784894667527973779495737677505480320582173920770364217967791385139900361100646940396020933040784981302787133853692983404791601982884828056637874982415354813808424929180644937338866857891227371980953097428852073581739195847064979525057361101667239114801520012633883502461490433168073392954949004206911552898032206369812484506844347061327925
s2 = b"asdfghjkl"   # Второе сообщение, которое зашифровано в качестве подписи 
n2 = bytes_to_long(s2)
n2_a = 4001362403394833717247095153340114575026143550591453769355494519288627097393602677804719203757482237143965353429691849494684441446129203683543659905944028690094469678092104068788189442018993294966644716497354460231188864313799279139388638784377561943690142585979917092854081882066702228406160608978619163510881139314740848759754991152064773340826367873074962340321761931910311963452847339055470802833423644056966699122185687984476137412681248460326590671906734610997435973230412232349892471555571118234219154592252671125896522796278333046288000028434577900608151546784496299830900524865979388926163315212895181185395174116866646181657559567587110261981873479351140966232628661059611700228182164031616113007585342144749554279194266390133127996010535815984822326521232669189444154267054294970850759348327174809207823397408648264456277315451773307667675676913863682667490627395216392496939275369215815906502879681447691727603170412594984104718404316783188302604217150336236639494069585117156994897576096449828853180539920691021271274299933276860808165790982676952276125802093890119730323184776195279844645977367610084850604666872081406770225765077338507443866099598698562555834240148890135684186312586422044882
s3 = b"zxcvbnm"     # Третье сообщение, которое зашифровано в качестве подписи 
n3 = bytes_to_long(s3)
n3_a = 29298079706744862220003414183998190668348582505775492800964497783661927660830570291770663761731159526912649905729449113475037175853752272161502110032522375615620663794046506433243933130189358667269879358162309901961530672722474993000063011010270525314005884800992150074298667912864533037206121774142169797740909677286530359630371744242399311367284577648573962490897976105672186860270355740824454902731184861600307361737853693390950386390174467372607042994051987087215582086163099546101139352759770176696120819107565598260904285411512833660459615390675276082881552695759853019994454078171708363632863683356704701971482376093211588410506272153413697535033218568486069250985807562980930072653226533927541194861854718975790068637069279417261405397634832307297164201609847027379098005409007863377027377888265738563792096033982447134072957208037575883985726063147130484496026262843594593878292223403237355722982553137191171062616002721652257712513702146534499441952910317415018963731552214205459478986324230513795266097370326108053870588724050118174733581584878966610803377373495158503567708890657157888686268500093689231539021775177897203358370914376420623014253636913477034891501664976017583186013389892228433501

# Находим модуль
n = GCD(pow(n1,257) - n1_a, GCD(pow(n2,257) - n2_a,pow(n3,257) - n3_a))

# Находим один из множителей n, опираясь на факт того, 
# что в двоичной записи модуля много нулей

for i in range(2,2050):
    for j in range(150):
        if n % (pow(2,i) + j) == 0:
            p = pow(2,i) + j
            break

#Зашифрованная подпись начальника
chief_signature_enc = 27743102878472464429329265093715208084537750305042027424232931885115144241650528491520271519880690278831624788617204043892163985200465611421202206622423809465423868616130086917807313225205961845621676904002848461638423849426185819378429599356199886336236699945377641981969725772243774429482795409855719033344036931887146906940006665057864782941409928875402578773903465068945740574254406185229057734526320627283695008560689419389199559336346260759024411561278034453435524784046639936477199948768900336211108942683552988762339733094163464891240827452164205333423167033981950735768933152880202447292357236949574864468276531386479350329039166452668291366063016212745316554114374358186320719531714488450261451165041902593063789924624552111265370403466860251054366329360949474844838254352309450451450228113687724561141875172320493932183049158332872277891842668277453264481912901505228458802358731874793110833584008267550239988505431092289577737861282492838661548395138722803400683624102572448456580416782963449911431947127120905818401984260327332210963503436854826286808544982764813998433122133115309124776944678015753261168519778585657362926908958847050393622398528395454117274124608024165437851155226360264479355
# Находим второй множитель
q = n//p

phi = (p-1)*(q-1)
d = inverse(257, phi)
# Вывод дешифрованной подписи начальника, которую потом можно использовать при создании нового аккаунта,
# с помощью 
print(long_to_bytes(pow(chief_signature_enc,d,n))) # Вывод дешифрованной подписи начальника, которую потом можно использовать при создании нового аккаунта